Write a script that populates the database with all of the faculty members
    + Restrict the cron job scripts to email only those who are Faculty
    + Implement the isFaculty attribute on the UserProfile model

Fix the external BBHS logo <img src> reference
    + Used it because I was having issues serving newly added static files

Go through and make sure we are only using users who have is_active=True so
that feature works consistently across the board

Fix LDAP Group mirroring bug with a replacement method
    + You can't modify what groups a user belongs to. You can't them to any
    other groups or remove them from the Staff group, because the LDAP auth
    module is set to mirror his/her LDAP groups over to Django.
    + Solution: Use security groups for everything OR drop LDAP mirroring and
    use something less invasive in the backend

Correct the time zone settings

What do you do when no more volunteers are needed?
	Email admin?
	Stop allowing users to sign up

Admin page action ideas:
	Email event ad - for users who are not signed up
	Email event reminder - for users who are signed up

Custom layout JS Widget for user profile

Add event search filtering criteria for the event index page
	+ Expired/not expired
	+ By year

Drop the admin interface and replace it with custom pages for more fine tuned functionality

Sort the event index page the way the user wants (date published, date of event, ascending, descending, etc...)

Have an interface where the user can search events by categories organized by years

Make the user profile page more lively.
	Add profile pictures
        Phone directory project?

Monthly cron job that will remind users of their yearly chaperone obligations

Weekly cron job that reminds users of events that they've already signed up for 

Daily cron job that reminds users of events that they've signed up for starting two days before the event

Cron job alerts - email/text/call ? combination?

Bash installation script for the intranet, installs dependencies, pulls code from github, apache, mod_wsgi, django, markdown, django_auth_ldap, bootstrap, server settings, etc

	* "A developer's job is to put himself/herself out of work"

Future app ideas? Make sure there's room for future expansion

Have django keep track of who is a Faculty member, member of ou=faculty,ou=Staff
either by seeing if they are in the OU or creating a security group for them. Bug them about
chaperone events only if they are faculty. Make sure this is able to be modified by an tech admin
- bool

GCalendar?

4 chaperone events for every teacher per year

Save or Email and Save
	Will require an admin page independent sign up form
	
On create event page, add inline events so you can add several at a time and save and send an email all at once

Emailing users and event administrators

User reports
	All users
	Individual users (search)?
